name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  SHELL: /bin/bash

jobs:
  Build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: ccache cache files
        if: startsWith(matrix.os, 'windows') != true
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{ runner.os }}

      - name: Install dependencies on OS X
        if: startsWith(matrix.os, 'macOS')
        run: |
          brew install python autoconf@2.13 ccache llvm yasm p7zip
      - name: Install dependencies on Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt install autoconf2.13 clang ccache llvm p7zip -y
      - name: Install dependencies on windows
        if: startsWith(matrix.os, 'windows')
        run: |
          Start-BitsTransfer -Source https://ftp.mozilla.org/pub/mozilla/libraries/win32/MozillaBuildSetup-Latest.exe -Destination ./MozillaBuildSetup.exe
          .\MozillaBuildSetup.exe /S | Out-Null
          iwr -useb get.scoop.sh | iex
          scoop install llvm --global
          echo "C:\ProgramData\scoop\shims;C:\Users\runneradmin\scoop\shims" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
          default: true

      - name: POSIX
        if: startsWith(matrix.os, 'windows') != true
        env:
          CC: "clang"
          CXX: "clang++"
        run: |
          ccache -z
          ccache cargo build --target ${{ matrix.target }}
          ccache cargo test
          ccache -s
          mkdir dist
          mv ./target/${{ matrix.target }}/debug/cli ./dist/spiderfire
          zip -r ./spiderfire.zip ./dist/spiderfire
      - name: Windows
        if: startsWith(matrix.os, 'windows')
        shell: cmd
        env:
          MOZTOOLS_PATH: 'C:\mozilla-build\msys\bin;C:\mozilla-build\bin'
          AUTOCONF: "C:/mozilla-build/msys/local/bin/autoconf-2.13"
          LINKER: "lld-link.exe"
          CC: "clang-cl.exe"
          CXX: "clang-cl.exe"
          NATIVE_WIN32_PYTHON: "C:\\mozilla-build\\python\\python.exe"
          PYTHON3: "C:\\mozilla-build\\python3\\python3.exe"
          LIBCLANG_PATH: "C:\\ProgramData\\scoop\\apps\\llvm\\current\\lib"
          CARGO_HOME: ${{ github.workspace }}\..\.cargo
        run: |
          cargo build --target ${{ matrix.target }}
          cargo test
          mkdir dist
          move ./target/${{ matrix.target }}/debug/cli.exe ./dist/spiderfire.exe
          zip -r ./spiderfire.zip ./dist/spiderfire
      
      - name: Deploy
        uses: WebFreak001/deploy-nightly@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # automatically provided by github actions
        with:
          upload_url: https://uploads.github.com/repos/sagudev/spiderfire/releases/54020897/assets{?name,label}
          release_id: 54020897
          asset_path: ./spiderfire.zip # path to archive to upload
          asset_name: spiderfire-${{ matrix.target }}-$$.zip # $$ is replaced with (YYYYMMDD) and 6 letter commit hash
          asset_content_type: application/zip
          max_releases: 7
